// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/takakuwa-s/line-wedding-api/driver"
	"github.com/takakuwa-s/line-wedding-api/dto"
	"github.com/takakuwa-s/line-wedding-api/interface/controller"
	"github.com/takakuwa-s/line-wedding-api/interface/gateway"
	"github.com/takakuwa-s/line-wedding-api/interface/presenter"
	"github.com/takakuwa-s/line-wedding-api/usecase/usecase"
)

// Injectors from wire.go:

func InitializeRouter() *driver.BackgroundProcessRouter {
	commonRouter := driver.NewCommonRouter()
	lineBot := dto.NewLineBot()
	lineGateway := gateway.NewLineGateway(lineBot)
	faceGateway := gateway.NewFaceGateway()
	firestore := dto.NewFirestore()
	commonRepository := gateway.NewCommonRepository(firestore)
	fileRepository := gateway.NewFileRepository(commonRepository, firestore)
	binaryRepository := gateway.NewBinaryRepository(firestore)
	backgroundProcessUsecase := usecase.NewBackgroundProcessUsecase(lineGateway, faceGateway, fileRepository, binaryRepository)
	backgroundProcessController := controller.NewBackgroundProcessController(backgroundProcessUsecase)
	messageRepository := gateway.NewMessageRepository()
	slideShowGateway := gateway.NewSlideShowGateway()
	slideShowRepository := gateway.NewFSlideShowRepository(commonRepository, firestore)
	userRepository := gateway.NewUserRepository(commonRepository, firestore)
	linePresenter := presenter.NewLinePresenter(lineBot)
	linePushUsecase := usecase.NewLinePushUsecase(messageRepository, userRepository, linePresenter, lineGateway)
	slideShowUsecase := usecase.NewSlideShowUsecase(messageRepository, fileRepository, slideShowGateway, slideShowRepository, binaryRepository, linePushUsecase)
	slideShowApiController := controller.NewSlideShowApiController(slideShowUsecase)
	backgroundProcessRouter := driver.NewBackgroundProcessRouter(commonRouter, backgroundProcessController, slideShowApiController)
	return backgroundProcessRouter
}

func InitializeScheduler() *driver.BackgroundProcessScheduler {
	lineBot := dto.NewLineBot()
	lineGateway := gateway.NewLineGateway(lineBot)
	faceGateway := gateway.NewFaceGateway()
	firestore := dto.NewFirestore()
	commonRepository := gateway.NewCommonRepository(firestore)
	fileRepository := gateway.NewFileRepository(commonRepository, firestore)
	binaryRepository := gateway.NewBinaryRepository(firestore)
	backgroundProcessUsecase := usecase.NewBackgroundProcessUsecase(lineGateway, faceGateway, fileRepository, binaryRepository)
	backgroundProcessScheduler := driver.NewBackgroundProcessScheduler(backgroundProcessUsecase)
	return backgroundProcessScheduler
}
